{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Table.js","webpack:///./src/util/functions.js","webpack:///./src/components/games/xd.js","webpack:///./src/pages/games/xd.js"],"names":["Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","createElement","responsiveClass","Xd","markets","default_game_bet","number","d4","d3","d2","bb","useState","game_bets","setGameBets","bets","setBets","auto4d","auto3d","auto2d","auto","setAuto","manageAuto","target","game","dataset","value","market","setMarket","theTotal","setTheTotal","addBet","bet","isNaN","parseInt","delBet","index","items","Array","from","length","splice","getBets","resetBets","updateBet","data","type","checked","id","field","item","slice","calculateTotal","actual_bets","the_market","undefined","tickets","this_games","games","the_actual_total","forEach","b","ticket","total","totalBets","amount","pretotal","discount","Math","round","fee","game_id","_bbets","getBB","push","fod","thd","twd","discount_percent","fee_percent","bb_bet","combinations","findPermutations","string","permutationsArray","i","char","indexOf","permutation","table_info","Form","Text","Control","placeholder","data-game","onChange","Button","style","width","title","onClick","icon","faPlus","Row","Col","inline","colSpan","Group","Label","fontSize","margin","padding","as","e","market_id","plaintext","fontWeight","disabled","Object","keys","map","k","key","name","faTrashAlt","readOnly","min","max","pattern","maxLength","data-field","data-bet","Check","toString","replace","filter","t","idx","Fragment","Play","0","1","2","3"],"mappings":"4FAAA,kFAKIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIY,EAAoB,YAAmBV,EAAU,SACjDW,EAAU,IAAWV,EAAWS,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SE,EAAqB,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CACxER,UAAWU,EACXZ,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIM,EAAkBJ,EAAoB,cAM1C,MAJ0B,iBAAfF,IACTM,EAAkBA,EAAkB,IAAMN,GAGxB,IAAMK,cAAc,MAAO,CAC7CZ,UAAWa,GACVF,GAGL,OAAOA,KAEM,O,s+BCtCR,ICwmBQG,EAlmBJ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACNC,EAAmB,CACvBC,OAAQ,GACRC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAI,GANoB,EASOC,mBAAS,CAAC,OAAD,UAAMN,KAAzCO,EATmB,KASRC,EATQ,OAUFF,mBAAS,IAA1BG,EAVmB,KAUbC,EAVa,OAYFJ,mBAAS,CAC/BK,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAHHC,EAZmB,KAYbC,EAZa,KAiBpBC,EAAa,SAAC,GAAgB,IAAD,EAAbC,EAAa,EAAbA,OAChBC,EAAOD,EAAOE,QAAQD,KACtBE,EAAQH,EAAOG,MACnBL,EAAQ,OAAD,UAAMD,IAAN,MAAaI,GAAOE,EAApB,MApBiB,EAsBEd,oBAAU,GAA/Be,EAtBmB,KAsBXC,EAtBW,OAwBMhB,mBAAS,GAAlCiB,EAxBmB,KAwBTC,EAxBS,KA0BpBC,EAAS,WACb,IAAIC,EAAG,iBAAQ1B,GACf0B,EAAIxB,GAAKyB,MAAMC,SAASd,EAAKH,SAAW,GAAKG,EAAKH,OAClDe,EAAIvB,GAAKwB,MAAMC,SAASd,EAAKF,SAAW,GAAKE,EAAKF,OAClDc,EAAItB,GAAKuB,MAAMC,SAASd,EAAKD,SAAW,GAAKC,EAAKD,OAClDL,EAAY,GAAD,mBAAKD,GAAL,CAAgBmB,MAEvBG,EAAS,SAAAC,GACb,IAAIC,EAAQC,MAAMC,KAAK1B,GACnBwB,EAAMG,OAAS,EACbJ,GAAS,GACXC,EAAMI,OAAOL,EAAO,GAGtBC,EAAQ,CAAC,OAAD,UAAM/B,IAEhBQ,EAAYuB,GACZK,EAAQL,IAGJM,EAAY,WAChB,IAAIN,EAAQ,CAAC,OAAD,UAAM/B,IAClBQ,EAAYuB,GACZK,EAAQL,IAGJO,EAAY,SAAC,GAAgB,IAAdrB,EAAa,EAAbA,OACbsB,EAAOtB,EAAOE,QAChBC,EAAwB,aAAhBH,EAAOuB,KAAsBvB,EAAOwB,QAAUxB,EAAOG,MAC3DsB,EAAKH,EAAKb,IACViB,EAAQJ,EAAKI,MACbZ,EAAQC,MAAMC,KAAK1B,GACnBqC,EAAOb,EAAMW,GACL,WAAVC,GAAsBvB,EAAMc,OAAS,IACvCd,EAAQA,EAAMyB,MAAM,EAAG,IAEzBD,EAAKD,GAASvB,EAETO,MAAMC,SAASd,EAAKH,WACvBiC,EAAK1C,GAAKY,EAAKH,QAEZgB,MAAMC,SAASd,EAAKF,WACvBgC,EAAKzC,GAAKW,EAAKF,QAEZe,MAAMC,SAASd,EAAKD,WACvB+B,EAAKxC,GAAKU,EAAKD,QAGjBkB,EAAMW,GAAMI,EAAeF,GAG3BR,EAAQL,GACRvB,EAAYuB,IAGRK,EAAU,SAACW,EAAaC,GAC5B,IAAgB,IAAZ3B,QAAgC4B,IAAfD,EAA0B,CAC7C,IAAIE,EAAU,GAEVC,EADcpD,OAAuBkD,IAAfD,EAA2BA,EAAa3B,GACrC+B,MACzBlD,EAAKiD,EAAWjD,GAChBC,EAAKgD,EAAWhD,GAChBC,EAAK+C,EAAW/C,GAChBiD,EAAmB,EACvBN,EAAYO,SAAQ,SAAAC,GAClB,IAAIC,EAAS,CACXvD,OAAQsD,EAAEtD,OACVQ,KAAM,GACNgD,MAAO,EACPC,UAAW,EACXrD,GAAIkD,EAAElD,IAER,QACS4C,IAAP/C,GACAqD,EAAEtD,OAAOiC,OAAS,IACjBP,MAAMC,SAAS2B,EAAErD,MAClBqD,EAAErD,GAAK,EACP,CACA,IAAID,EAASsD,EAAEtD,OACX0D,EAAS/B,SAAS2B,EAAErD,IACpB0D,EAAoB,IAATD,EACXE,EAAWC,KAAKC,MAAMH,GAAY1D,EAAG2D,SAAW,MAChDG,EAAMF,KAAKC,MAAMH,GAAY1D,EAAG8D,IAAM,MACtCP,EAAQG,EAAWC,EAAWG,EAC9BtC,EAAM,CACRuC,QAAS/D,EAAG+D,QACZ/C,KAAM,KACNjB,OAAQA,EACR0D,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVG,IAAKA,EACLP,MAAOA,GAET,GAAIF,EAAElD,GAAI,CACR,IAAI6D,EAASC,EAAMzC,GACnBwC,EAAOZ,SAAQ,SAAAjD,GACbmD,EAAO/C,KAAK2D,KAAK/D,MAEnBmD,EAAOC,OAAS/B,EAAI+B,MAAQS,EAAOhC,YAEnCsB,EAAO/C,KAAK2D,KAAK1C,GACjB8B,EAAOC,OAASA,EAGpB,QACSR,IAAP9C,GACAoD,EAAEtD,OAAOiC,OAAS,IACjBP,MAAMC,SAAS2B,EAAEpD,MAClBoD,EAAEpD,GAAK,EACP,CACA,IAAIF,EAASsD,EAAEtD,OAAO4C,MAAMU,EAAEtD,OAAOiC,OAAS,GAC1CyB,EAAS/B,SAAS2B,EAAEpD,IACpByD,EAAoB,IAATD,EACXE,EAAWC,KAAKC,MAAMH,GAAYzD,EAAG0D,SAAW,MAChDG,EAAMF,KAAKC,MAAMH,GAAYzD,EAAG6D,IAAM,MACtCP,EAAQG,EAAWC,EAAWG,EAC9BtC,EAAM,CACRuC,QAAS9D,EAAG8D,QACZ/C,KAAM,KACNjB,OAAQA,EACR0D,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVG,IAAKA,EACLP,MAAOA,GAET,GAAIF,EAAElD,GAAI,CACR,IAAI6D,EAASC,EAAMzC,GACnBwC,EAAOZ,SAAQ,SAAAjD,GACbmD,EAAO/C,KAAK2D,KAAK/D,MAEnBmD,EAAOC,OAAS/B,EAAI+B,MAAQS,EAAOhC,YAEnCsB,EAAO/C,KAAK2D,KAAK1C,GACjB8B,EAAOC,OAASA,EAGpB,QACSR,IAAP7C,GACAmD,EAAEtD,OAAOiC,OAAS,IACjBP,MAAMC,SAAS2B,EAAEnD,MAClBmD,EAAEnD,GAAK,EACP,CACA,IAAIH,EAASsD,EAAEtD,OAAO4C,MAAMU,EAAEtD,OAAOiC,OAAS,GAC1CyB,EAAS/B,SAAS2B,EAAEnD,IACpBwD,EAAoB,IAATD,EACXE,EAAWC,KAAKC,MAAMH,GAAYxD,EAAGyD,SAAW,MAChDG,EAAMF,KAAKC,MAAMH,GAAYxD,EAAG4D,IAAM,MACtCP,EAAQG,EAAWC,EAAWG,EAC9BtC,EAAM,CACRuC,QAAS7D,EAAG6D,QACZ/C,KAAM,KACNjB,OAAQA,EACR0D,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVG,IAAKA,EACLP,MAAOA,GAET,GAAIF,EAAElD,GAAI,CACR,IAAI6D,EAASC,EAAMzC,GACnBwC,EAAOZ,SAAQ,SAAAjD,GACbmD,EAAO/C,KAAK2D,KAAK/D,MAEnBmD,EAAOC,OAAS/B,EAAI+B,MAAQS,EAAOhC,YAEnCsB,EAAO/C,KAAK2D,KAAK1C,GACjB8B,EAAOC,OAASA,EAGpBP,EAAQkB,KAAKZ,GACbH,GAAoBG,EAAOC,SAE7B/C,EAAQwC,GACR1B,EAAY6B,KAIVP,EAAiB,SAAAF,GACrB,IAAIyB,EACF1C,MAAMC,SAASgB,EAAK1C,OAAS0C,EAAK3C,QAAU2C,EAAK3C,OAAOiC,OAAS,EAC7D,EACAN,SAASgB,EAAK1C,IAChBoE,EACF3C,MAAMC,SAASgB,EAAKzC,OAASyC,EAAK3C,QAAU2C,EAAK3C,OAAOiC,OAAS,EAC7D,EACAN,SAASgB,EAAKzC,IAChBoE,EACF5C,MAAMC,SAASgB,EAAKxC,OAASwC,EAAK3C,QAAU2C,EAAK3C,OAAOiC,OAAS,EAC7D,EACAN,SAASgB,EAAKxC,IAEhBoE,EAAmB,EACnBC,EAAc,GACF,IAAZpD,IACFmD,EAAmBzE,EAAQsB,GAAQwC,SACnCY,EAAc1E,EAAQsB,GAAQ2C,KAGhC,IAAIJ,EAAiB,IAANS,EAAmB,IAANC,EAAmB,IAANC,EAErCV,EAAWC,KAAKC,MAAMH,GAAYY,EAAmB,MACrDR,EAAMF,KAAKC,MAAMH,GAAYa,EAAc,MAC3ChB,EAAQG,EAAWC,EAAWG,EAKlC,OAHApB,EAAKiB,SAAWA,EAChBjB,EAAKoB,IAAMA,EACXpB,EAAKa,MAAQA,EACNb,GAGHuB,EAAQ,SAAAO,GACZ,IACIC,EDtPwB,SAAnBC,EAAmBC,GAC9B,IAAKA,GAA4B,iBAAXA,EACpB,MAAO,GACF,GAAIA,EAAO3C,OAAS,EACzB,OAAO2C,EAKT,IAFA,IAAIC,EAAoB,GAEfC,EAAI,EAAGA,EAAIF,EAAO3C,OAAQ6C,IAAK,CACtC,IAAIC,EAAOH,EAAOE,GAElB,GAAIF,EAAOI,QAAQD,KAAUD,EAI7B,IAFA,IAEA,MAAwBH,EAFHC,EAAOhC,MAAM,EAAGkC,GAAKF,EAAOhC,MAAMkC,EAAI,EAAGF,EAAO3C,YAErE,aAA0D,CAAC,IAAlDgD,EAAiD,QACxDJ,EAAkBV,KAAKY,EAAOE,IAGlC,OAAOJ,ECkOcF,CADFF,EAAOzE,QAEpB8B,EAAQ,GAMZ,OALA4C,EAAarB,SAAQ,SAAArD,GACnB,IAAIyB,EAAG,iBAAQgD,GACfhD,EAAIzB,OAASA,EACb8B,EAAMqC,KAAK1C,MAENK,GASHoD,EAAa,kBACjB,4BACE,iCACA,qCACA,4BACE,kBAACC,EAAA,EAAKC,KAAN,mBACA,kBAACD,EAAA,EAAKE,QAAN,CACEC,YAAY,OACZC,YAAU,SACVhD,KAAK,SACLpB,MAAON,EAAKH,OACZ8E,SAAUzE,KAGd,4BACE,kBAACoE,EAAA,EAAKC,KAAN,mBACA,kBAACD,EAAA,EAAKE,QAAN,CACEC,YAAY,OACZC,YAAU,SACVhD,KAAK,SACLpB,MAAON,EAAKF,OACZ6E,SAAUzE,KAGd,4BACE,kBAACoE,EAAA,EAAKC,KAAN,mBACA,kBAACD,EAAA,EAAKE,QAAN,CACEC,YAAY,OACZC,YAAU,SACVhD,KAAK,SACLpB,MAAON,EAAKD,OACZ4E,SAAUzE,KAGd,kCACA,4BACE,kBAAC0E,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBC,MAAM,UACNC,QAASrE,EACTzC,UAAU,qBAEV,kBAAC,IAAD,CAAiB+G,KAAMC,IAAQ3G,KAAK,WAM5C,OACE,oCACE,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,0CACA,+CAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CAAMe,QAAM,GACV,kBAACxH,EAAA,EAAD,CACEM,SAAO,EACPG,OAAK,EACLG,YAAU,EACVP,UAAU,oBACVK,KAAK,MAEL,2BAAOL,UAAU,cACf,4BACE,wBAAIoH,QAAS,GACX,kBAAChB,EAAA,EAAKiB,MAAN,KACE,kBAACjB,EAAA,EAAKkB,MAAN,CACEX,MAAO,CACLY,SAAU,QACVC,OAAQ,eACRC,QAAS,iBAJb,aASA,kBAACrB,EAAA,EAAKE,QAAN,CACEoB,GAAG,SACH1H,UAAU,gCACVoC,MAAOC,EACPoE,SAzFD,SAAAkB,GACnB,IAAIC,EAAYD,EAAE1F,OAAOG,MACzBE,EAAUsF,GACVvE,KAuFoBwE,WAAS,EACTlB,MAAO,CACLmB,WAAY,SACZP,SAAU,QAGZ,4BAAQQ,UAAQ,EAAC3F,OAAQ,GAAzB,iBAGC4F,OAAOC,KAAKlH,GAASmH,KAAI,SAAAC,GAAC,OACzB,4BAAQC,IAAKD,EAAG/F,MAAO+F,GACpBpH,EAAQoH,GAAGE,WAKpB,yBAAKrI,UAAU,wBACb,kBAAC0G,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBC,MAAM,UACNC,QAASrE,GAHX,gBAKe,kBAAC,IAAD,CAAiBsE,KAAMC,IAAQ3G,KAAK,QAEnD,kBAACqG,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBtG,QAAQ,SACRwG,QAAS,kBAAMjE,EAAOtB,EAAU2B,OAAS,KAH3C,iBAKiB,IACf,kBAAC,IAAD,CAAiB6D,KAAMuB,IAAYjI,KAAK,WAK/C8F,KAEH,+BACG5E,EAAU2G,KAAI,SAACxF,EAAKI,GAAN,OACb,wBAAIsF,IAAG,OAAStF,GACd,4BACE,kBAACsD,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAUU,EAAQ,EAAb,IACL6D,MAAO,CAAEC,MAAO,WAGpB,4BACE,kBAACR,EAAA,EAAKE,QAAN,CACEC,YAAY,OACZiC,IAAK,EACLhF,KAAK,SACLiF,IAAK,KACLC,QAAQ,aACRC,UAAW,EACXvG,MAAOM,EAAIzB,OACX2H,aAAW,SACXC,WAAU/F,EACV2D,SAAUnD,KAGd,4BACE,kBAAC8C,EAAA,EAAKE,QAAN,CACEC,YAAY,KACZiC,IAAK,EACLhF,KAAK,SACLuE,UAAWrF,EAAIzB,QAAUyB,EAAIzB,OAAOiC,OAAS,EAC7Cd,MAAOM,EAAIxB,GACX0H,aAAW,KACXC,WAAU/F,EACV2D,SAAUnD,KAGd,4BACE,kBAAC8C,EAAA,EAAKE,QAAN,CACEC,YAAY,KACZiC,IAAK,EACLhF,KAAK,SACLuE,UAAWrF,EAAIzB,QAAUyB,EAAIzB,OAAOiC,OAAS,EAC7Cd,MAAOM,EAAIvB,GACXyH,aAAW,KACXC,WAAU/F,EACV2D,SAAUnD,KAGd,4BACE,kBAAC8C,EAAA,EAAKE,QAAN,CACEC,YAAY,KACZiC,IAAK,EACLhF,KAAK,SACLuE,UAAWrF,EAAIzB,QAAUyB,EAAIzB,OAAOiC,OAAS,EAC7Cd,MAAOM,EAAItB,GACXwH,aAAW,KACXC,WAAU/F,EACV2D,SAAUnD,KAId,4BACE,kBAAC8C,EAAA,EAAK0C,MAAN,CACEtF,KAAK,SACLE,GAAE,UAAYZ,EACd8F,aAAW,KACXC,WAAU/F,EACVW,QAASf,EAAIrB,GACboF,SAAUnD,KAGd,4BACE,kBAACoD,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBiC,WAAU/F,EACVxC,QAAQ,SACRwG,QAAS,kBAAMjE,EAAOC,IACtB9C,UAAU,qBAEV,kBAAC,IAAD,CAAiB+G,KAAMuB,IAAYjI,KAAK,cAMlD,2BAAOL,UAAU,cAAcmG,QAKrC,kBAACe,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CAAMe,QAAM,GACV,kBAACxH,EAAA,EAAD,CACEM,SAAO,EACPM,YAAU,EACVH,OAAK,EACLC,KAAK,KACLL,UAAU,iCAEV,2BAAOA,UAAU,cACf,4BACE,wBAAIoH,QAAS,GACX,kBAAChB,EAAA,EAAKkB,MAAN,CACEX,MAAO,CACLY,SAAU,QACVC,OAAQ,eACRC,QAAS,iBAJb,gBAUF,wBAAIL,QAAS,GACX,kBAAChB,EAAA,EAAKC,KAAN,KACE,qCACS,IACP,gCACG9D,EACEwG,WACAC,QAAQ,wBAAyB,MAC5B,IANZ,WAaPvH,EACEwH,QAAO,SAAAC,GAAC,OAAIA,EAAEzH,KAAKyB,OAAS,KAC5BgF,KAAI,SAAC1D,EAAQ2E,GAAT,OACH,kBAAC,IAAMC,SAAP,CAAgBhB,IAAG,UAAYe,GAC7B,2BAAOnJ,UAAU,cACf,4BACE,wBAAIoH,QAAS,GACX,kBAAChB,EAAA,EAAKC,KAAN,gBAAoB8C,EAAM,GAC1B,kBAAC/C,EAAA,EAAKkB,MAAN,KACE,wBAAItH,UAAU,QAAd,SACSwE,EAAOvD,OADhB,IACyBuD,EAAOnD,GAAK,OAAS,MAIlD,wBAAI+F,QAAS,EAAGpH,UAAU,wBACxB,kBAACoG,EAAA,EAAKC,KAAN,KACE,4CACgB,IACd,gCACG7B,EAAOC,MACLsE,WACAC,QAAQ,wBAAyB,MAC5B,IANZ,QAUF,kBAAC5C,EAAA,EAAKC,KAAN,KACE,4BACE,gCAAS7B,EAAO/C,KAAKyB,QADvB,eAMN,4BACE,iCACA,qCACA,mCACA,sCACA,wCAGJ,+BACGsB,EAAO/C,KAAKyG,KAAI,SAACxF,EAAKI,GAAN,OACf,wBAAIsF,IAAG,OAAStF,GACd,4BACE,kBAACsD,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAUU,EAAQ,EAAb,IACL6D,MAAO,CAAEC,MAAO,WAGpB,4BACE,kBAACR,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAOM,EAAIzB,UAGf,4BACE,kBAACmF,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAOM,EAAIkC,SACRmE,WACAC,QAAQ,wBAAyB,QAGxC,4BACE,kBAAC5C,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAOM,EAAImC,SACRkE,WACAC,QAAQ,wBAAyB,QAGxC,4BACE,kBAAC5C,EAAA,EAAKE,QAAN,CACEuB,WAAW,EACXU,UAAU,EACVnG,MAAOM,EAAI+B,MACRsE,WACAC,QAAQ,wBAAyB,kBAStD,kBAACtC,EAAA,EAAD,CAAQpG,QAAQ,UAAUN,UAAU,WAApC,UAGA,kBAAC0G,EAAA,EAAD,CAAQpG,QAAQ,SAASN,UAAU,UAAU8G,QAASzD,GAAtD,cCjgBGgG,UA1FF,WAmFX,OACE,oCACE,kBAAC,EAAD,CAAMtI,QApFM,CACduI,EAAG,CACDjB,KAAM,YACNjE,MAAO,CACLlD,GAAI,CACF+D,QAAS,IACTJ,SAAU,GACVG,IAAK,GAEP7D,GAAI,CACF8D,QAAS,KACTJ,SAAU,GACVG,IAAK,GAEP5D,GAAI,CACF6D,QAAS,KACTJ,SAAU,EACVG,IAAK,MAIXuE,EAAG,CACDlB,KAAM,QACNjE,MAAO,CACLlD,GAAI,CACF+D,QAAS,IACTJ,SAAU,GACVG,IAAK,GAEP7D,GAAI,CACF8D,QAAS,KACTJ,SAAU,GACVG,IAAK,GAEP5D,GAAI,CACF6D,QAAS,KACTJ,SAAU,EACVG,IAAK,MAIXwE,EAAG,CACDnB,KAAM,QACNjE,MAAO,CACLlD,GAAI,CACF+D,QAAS,IACTJ,SAAU,GACVG,IAAK,GAEP7D,GAAI,CACF8D,QAAS,KACTJ,SAAU,GACVG,IAAK,GAEP5D,GAAI,CACF6D,QAAS,KACTJ,SAAU,EACVG,IAAK,MAIXyE,EAAG,CACDpB,KAAM,cACNjE,MAAO,CACLlD,GAAI,CACF+D,QAAS,IACTJ,SAAU,EACVG,IAAK,GAEP7D,GAAI,CACF8D,QAAS,KACTJ,SAAU,EACVG,IAAK,GAEP5D,GAAI,CACF6D,QAAS,KACTJ,SAAU,EACVG,IAAK","file":"component---src-pages-games-xd-js-4ddb71a9c2038dfcebf5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","export const findPermutations = string => {\n  if (!string || typeof string !== \"string\") {\n    return \"\"\n  } else if (string.length < 2) {\n    return string\n  }\n\n  let permutationsArray = []\n\n  for (let i = 0; i < string.length; i++) {\n    let char = string[i]\n\n    if (string.indexOf(char) !== i) continue\n\n    let remainingChars = string.slice(0, i) + string.slice(i + 1, string.length)\n\n    for (let permutation of findPermutations(remainingChars)) {\n      permutationsArray.push(char + permutation)\n    }\n  }\n  return permutationsArray\n}\n","import { faPlus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\"\nimport { findPermutations } from \"src/util/functions\"\n\nconst Xd = ({ markets }) => {\n  const default_game_bet = {\n    number: \"\",\n    d4: \"\",\n    d3: \"\",\n    d2: \"\",\n    bb: false,\n  }\n\n  const [game_bets, setGameBets] = useState([{ ...default_game_bet }])\n  const [bets, setBets] = useState([])\n\n  const [auto, setAuto] = useState({\n    auto4d: \"\",\n    auto3d: \"\",\n    auto2d: \"\",\n  })\n  const manageAuto = ({ target }) => {\n    let game = target.dataset.game\n    let value = target.value\n    setAuto({ ...auto, [game]: value })\n  }\n  const [market, setMarket] = useState(-1)\n\n  const [theTotal, setTheTotal] = useState(0)\n\n  const addBet = () => {\n    let bet = { ...default_game_bet }\n    bet.d4 = isNaN(parseInt(auto.auto4d)) ? \"\" : auto.auto4d\n    bet.d3 = isNaN(parseInt(auto.auto3d)) ? \"\" : auto.auto3d\n    bet.d2 = isNaN(parseInt(auto.auto2d)) ? \"\" : auto.auto2d\n    setGameBets([...game_bets, bet])\n  }\n  const delBet = index => {\n    let items = Array.from(game_bets)\n    if (items.length > 1) {\n      if (index > -1) {\n        items.splice(index, 1)\n      }\n    } else {\n      items = [{ ...default_game_bet }]\n    }\n    setGameBets(items)\n    getBets(items)\n  }\n\n  const resetBets = () => {\n    let items = [{ ...default_game_bet }]\n    setGameBets(items)\n    getBets(items)\n  }\n\n  const updateBet = ({ target }) => {\n    const data = target.dataset\n    let value = target.type === \"checkbox\" ? target.checked : target.value\n    const id = data.bet\n    const field = data.field\n    const items = Array.from(game_bets)\n    const item = items[id]\n    if (field === \"number\" && value.length > 4) {\n      value = value.slice(0, 4)\n    }\n    item[field] = value\n\n    if (!isNaN(parseInt(auto.auto4d))) {\n      item.d4 = auto.auto4d\n    }\n    if (!isNaN(parseInt(auto.auto3d))) {\n      item.d3 = auto.auto3d\n    }\n    if (!isNaN(parseInt(auto.auto2d))) {\n      item.d2 = auto.auto2d\n    }\n\n    items[id] = calculateTotal(item)\n\n    // console.log(items)\n    getBets(items)\n    setGameBets(items)\n  }\n\n  const getBets = (actual_bets, the_market) => {\n    if (market !== -1 || the_market !== undefined) {\n      let tickets = []\n      let this_market = markets[the_market !== undefined ? the_market : market]\n      let this_games = this_market.games\n      let d4 = this_games.d4\n      let d3 = this_games.d3\n      let d2 = this_games.d2\n      let the_actual_total = 0\n      actual_bets.forEach(b => {\n        let ticket = {\n          number: b.number,\n          bets: [],\n          total: 0,\n          totalBets: 0,\n          bb: b.bb,\n        }\n        if (\n          d4 !== undefined &&\n          b.number.length > 3 &&\n          !isNaN(parseInt(b.d4)) &&\n          b.d4 > 0\n        ) {\n          let number = b.number\n          let amount = parseInt(b.d4)\n          let pretotal = amount * 1000\n          let discount = Math.round(pretotal * (d4.discount / 100))\n          let fee = Math.round(pretotal * (d4.fee / 100))\n          let total = pretotal - discount + fee\n          let bet = {\n            game_id: d4.game_id,\n            game: \"4d\",\n            number: number,\n            amount: amount,\n            pretotal: pretotal,\n            discount: discount,\n            fee: fee,\n            total: total,\n          }\n          if (b.bb) {\n            let _bbets = getBB(bet)\n            _bbets.forEach(bb => {\n              ticket.bets.push(bb)\n            })\n            ticket.total += bet.total * _bbets.length\n          } else {\n            ticket.bets.push(bet)\n            ticket.total += total\n          }\n        }\n        if (\n          d3 !== undefined &&\n          b.number.length > 2 &&\n          !isNaN(parseInt(b.d3)) &&\n          b.d3 > 0\n        ) {\n          let number = b.number.slice(b.number.length - 3)\n          let amount = parseInt(b.d3)\n          let pretotal = amount * 1000\n          let discount = Math.round(pretotal * (d3.discount / 100))\n          let fee = Math.round(pretotal * (d3.fee / 100))\n          let total = pretotal - discount + fee\n          let bet = {\n            game_id: d3.game_id,\n            game: \"3d\",\n            number: number,\n            amount: amount,\n            pretotal: pretotal,\n            discount: discount,\n            fee: fee,\n            total: total,\n          }\n          if (b.bb) {\n            let _bbets = getBB(bet)\n            _bbets.forEach(bb => {\n              ticket.bets.push(bb)\n            })\n            ticket.total += bet.total * _bbets.length\n          } else {\n            ticket.bets.push(bet)\n            ticket.total += total\n          }\n        }\n        if (\n          d2 !== undefined &&\n          b.number.length > 1 &&\n          !isNaN(parseInt(b.d2)) &&\n          b.d2 > 0\n        ) {\n          let number = b.number.slice(b.number.length - 2)\n          let amount = parseInt(b.d2)\n          let pretotal = amount * 1000\n          let discount = Math.round(pretotal * (d2.discount / 100))\n          let fee = Math.round(pretotal * (d2.fee / 100))\n          let total = pretotal - discount + fee\n          let bet = {\n            game_id: d2.game_id,\n            game: \"2d\",\n            number: number,\n            amount: amount,\n            pretotal: pretotal,\n            discount: discount,\n            fee: fee,\n            total: total,\n          }\n          if (b.bb) {\n            let _bbets = getBB(bet)\n            _bbets.forEach(bb => {\n              ticket.bets.push(bb)\n            })\n            ticket.total += bet.total * _bbets.length\n          } else {\n            ticket.bets.push(bet)\n            ticket.total += total\n          }\n        }\n        tickets.push(ticket)\n        the_actual_total += ticket.total\n      })\n      setBets(tickets)\n      setTheTotal(the_actual_total)\n    }\n  }\n\n  const calculateTotal = item => {\n    let fod =\n      isNaN(parseInt(item.d4)) || !item.number || item.number.length < 4\n        ? 0\n        : parseInt(item.d4)\n    let thd =\n      isNaN(parseInt(item.d3)) || !item.number || item.number.length < 3\n        ? 0\n        : parseInt(item.d3)\n    let twd =\n      isNaN(parseInt(item.d2)) || !item.number || item.number.length < 2\n        ? 0\n        : parseInt(item.d2)\n\n    let discount_percent = 0\n    let fee_percent = 0\n    if (market !== -1) {\n      discount_percent = markets[market].discount\n      fee_percent = markets[market].fee\n    }\n\n    let pretotal = fod * 1000 + thd * 1000 + twd * 1000\n\n    let discount = Math.round(pretotal * (discount_percent / 100))\n    let fee = Math.round(pretotal * (fee_percent / 100))\n    let total = pretotal - discount + fee\n\n    item.discount = discount\n    item.fee = fee\n    item.total = total\n    return item\n  }\n\n  const getBB = bb_bet => {\n    let bet_number = bb_bet.number\n    let combinations = findPermutations(bet_number)\n    let items = []\n    combinations.forEach(number => {\n      let bet = { ...bb_bet }\n      bet.number = number\n      items.push(bet)\n    })\n    return items\n  }\n\n  const updateMarket = e => {\n    let market_id = e.target.value\n    setMarket(market_id)\n    resetBets()\n  }\n\n  const table_info = () => (\n    <tr>\n      <th>#</th>\n      <th>Nomor</th>\n      <th>\n        <Form.Text>Taruhan 4D</Form.Text>\n        <Form.Control\n          placeholder=\"auto\"\n          data-game=\"auto4d\"\n          type=\"number\"\n          value={auto.auto4d}\n          onChange={manageAuto}\n        />\n      </th>\n      <th>\n        <Form.Text>Taruhan 3D</Form.Text>\n        <Form.Control\n          placeholder=\"auto\"\n          data-game=\"auto3d\"\n          type=\"number\"\n          value={auto.auto3d}\n          onChange={manageAuto}\n        />\n      </th>\n      <th>\n        <Form.Text>Taruhan 2D</Form.Text>\n        <Form.Control\n          placeholder=\"auto\"\n          data-game=\"auto2d\"\n          type=\"number\"\n          value={auto.auto2d}\n          onChange={manageAuto}\n        />\n      </th>\n      <th>BB</th>\n      <th>\n        <Button\n          style={{ width: \"auto\" }}\n          title=\"Add Bet\"\n          onClick={addBet}\n          className=\"d-md-block d-none\"\n        >\n          <FontAwesomeIcon icon={faPlus} size=\"sm\" />\n        </Button>\n      </th>\n    </tr>\n  )\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h2>4D, 3D, 2D</h2>\n          <h5>IDR 1,000 = 1</h5>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Form inline>\n            <Table\n              striped\n              hover\n              responsive\n              className=\"betTable betPanel\"\n              size=\"sm\"\n            >\n              <thead className=\"table-dark\">\n                <tr>\n                  <td colSpan={7}>\n                    <Form.Group>\n                      <Form.Label\n                        style={{\n                          fontSize: \"1.8em\",\n                          margin: \"2px 2rem 0 0\",\n                          padding: \"0.375rem 2px\",\n                        }}\n                      >\n                        Bet Panel\n                      </Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        className=\"form-control betTable inherit\"\n                        value={market}\n                        onChange={updateMarket}\n                        plaintext\n                        style={{\n                          fontWeight: \"bolder\",\n                          fontSize: \"2em\",\n                        }}\n                      >\n                        <option disabled value={-1}>\n                          Select Market\n                        </option>\n                        {Object.keys(markets).map(k => (\n                          <option key={k} value={k}>\n                            {markets[k].name}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Form.Group>\n                    <div className=\"d-md-none d-sm-block\">\n                      <Button\n                        style={{ width: \"auto\" }}\n                        title=\"Add Bet\"\n                        onClick={addBet}\n                      >\n                        Tambah Baris <FontAwesomeIcon icon={faPlus} size=\"sm\" />\n                      </Button>\n                      <Button\n                        style={{ width: \"auto\" }}\n                        variant=\"danger\"\n                        onClick={() => delBet(game_bets.length - 1)}\n                      >\n                        Hapus Terakhir{\" \"}\n                        <FontAwesomeIcon icon={faTrashAlt} size=\"sm\" />\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n                {table_info()}\n              </thead>\n              <tbody>\n                {game_bets.map((bet, index) => (\n                  <tr key={`bet-${index}`}>\n                    <td>\n                      <Form.Control\n                        plaintext={true}\n                        readOnly={true}\n                        value={`${index + 1}.`}\n                        style={{ width: \"1rem\" }}\n                      />\n                    </td>\n                    <td>\n                      <Form.Control\n                        placeholder=\"ABCD\"\n                        min={0}\n                        type=\"number\"\n                        max={9999}\n                        pattern=\"[0-9]{2,4}\"\n                        maxLength={4}\n                        value={bet.number}\n                        data-field=\"number\"\n                        data-bet={index}\n                        onChange={updateBet}\n                      />\n                    </td>\n                    <td>\n                      <Form.Control\n                        placeholder=\"4D\"\n                        min={0}\n                        type=\"number\"\n                        disabled={!bet.number || bet.number.length < 4}\n                        value={bet.d4}\n                        data-field=\"d4\"\n                        data-bet={index}\n                        onChange={updateBet}\n                      />\n                    </td>\n                    <td>\n                      <Form.Control\n                        placeholder=\"3D\"\n                        min={0}\n                        type=\"number\"\n                        disabled={!bet.number || bet.number.length < 3}\n                        value={bet.d3}\n                        data-field=\"d3\"\n                        data-bet={index}\n                        onChange={updateBet}\n                      />\n                    </td>\n                    <td>\n                      <Form.Control\n                        placeholder=\"2D\"\n                        min={0}\n                        type=\"number\"\n                        disabled={!bet.number || bet.number.length < 2}\n                        value={bet.d2}\n                        data-field=\"d2\"\n                        data-bet={index}\n                        onChange={updateBet}\n                      />\n                    </td>\n\n                    <td>\n                      <Form.Check\n                        type=\"switch\"\n                        id={`bb-bet-${index}`}\n                        data-field=\"bb\"\n                        data-bet={index}\n                        checked={bet.bb}\n                        onChange={updateBet}\n                      />\n                    </td>\n                    <td>\n                      <Button\n                        style={{ width: \"auto\" }}\n                        data-bet={index}\n                        variant=\"danger\"\n                        onClick={() => delBet(index)}\n                        className=\"d-md-block d-none\"\n                      >\n                        <FontAwesomeIcon icon={faTrashAlt} size=\"sm\" />\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot className=\"table-dark\">{table_info()}</tfoot>\n            </Table>\n          </Form>\n        </Col>\n\n        <Col>\n          <Form inline>\n            <Table\n              striped\n              responsive\n              hover\n              size=\"sm\"\n              className=\"betTable mt-3 mt-sm-3 mt-md-0\"\n            >\n              <thead className=\"table-dark\">\n                <tr>\n                  <th colSpan={3}>\n                    <Form.Label\n                      style={{\n                        fontSize: \"1.8em\",\n                        margin: \"2px 2rem 0 0\",\n                        padding: \"0.375rem 2px\",\n                      }}\n                    >\n                      Hasil Total\n                    </Form.Label>\n                  </th>\n                  <th colSpan={3}>\n                    <Form.Text>\n                      <h6>\n                        Total:{\" \"}\n                        <strong>\n                          {theTotal\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                        </strong>{\" \"}\n                        IDR\n                      </h6>\n                    </Form.Text>\n                  </th>\n                </tr>\n              </thead>\n              {bets\n                .filter(t => t.bets.length > 0)\n                .map((ticket, idx) => (\n                  <React.Fragment key={`ticket-${idx}`}>\n                    <thead className=\"table-dark\">\n                      <tr>\n                        <th colSpan={3}>\n                          <Form.Text>Ticket #{idx + 1}</Form.Text>\n                          <Form.Label>\n                            <h5 className=\"my-1\">\n                              Nomor {ticket.number} {ticket.bb ? \"+ BB\" : \"\"}\n                            </h5>\n                          </Form.Label>\n                        </th>\n                        <th colSpan={3} className=\"bg-warning text-dark\">\n                          <Form.Text>\n                            <h6>\n                              Ticket Bayar:{\" \"}\n                              <strong>\n                                {ticket.total\n                                  .toString()\n                                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                              </strong>{\" \"}\n                              IDR\n                            </h6>\n                          </Form.Text>\n                          <Form.Text>\n                            <h6>\n                              <strong>{ticket.bets.length}</strong> Taruhan\n                            </h6>\n                          </Form.Text>\n                        </th>\n                      </tr>\n                      <tr>\n                        <th>#</th>\n                        <th>Nomor</th>\n                        <th>Bet</th>\n                        <th>Diskon</th>\n                        <th>Bayar:</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ticket.bets.map((bet, index) => (\n                        <tr key={`res-${index}`}>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={`${index + 1}.`}\n                              style={{ width: \"1rem\" }}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.number}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.pretotal\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.discount\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.total\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </React.Fragment>\n                ))}\n            </Table>\n            <Button variant=\"warning\" className=\"mx-auto\">\n              Submit\n            </Button>\n            <Button variant=\"danger\" className=\"mx-auto\" onClick={resetBets}>\n              Clear\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Xd\n","import React from \"react\"\nimport Game from \"src/components/games/xd\"\n\nconst Play = () => {\n  const markets = {\n    0: {\n      name: \"Indonesia\",\n      games: {\n        d4: {\n          game_id: 234,\n          discount: 10,\n          fee: 3,\n        },\n        d3: {\n          game_id: 2138,\n          discount: 20,\n          fee: 5,\n        },\n        d2: {\n          game_id: 3213,\n          discount: 0,\n          fee: 10,\n        },\n      },\n    },\n    1: {\n      name: \"China\",\n      games: {\n        d4: {\n          game_id: 234,\n          discount: 10,\n          fee: 3,\n        },\n        d3: {\n          game_id: 2138,\n          discount: 20,\n          fee: 5,\n        },\n        d2: {\n          game_id: 3213,\n          discount: 0,\n          fee: 10,\n        },\n      },\n    },\n    2: {\n      name: \"Texas\",\n      games: {\n        d4: {\n          game_id: 234,\n          discount: 10,\n          fee: 3,\n        },\n        d3: {\n          game_id: 2138,\n          discount: 20,\n          fee: 5,\n        },\n        d2: {\n          game_id: 3213,\n          discount: 0,\n          fee: 10,\n        },\n      },\n    },\n    3: {\n      name: \"Mexico Mega\",\n      games: {\n        d4: {\n          game_id: 234,\n          discount: 0,\n          fee: 0,\n        },\n        d3: {\n          game_id: 2138,\n          discount: 0,\n          fee: 0,\n        },\n        d2: {\n          game_id: 3213,\n          discount: 0,\n          fee: 0,\n        },\n      },\n    },\n  }\n  return (\n    <>\n      <Game markets={markets} />\n    </>\n  )\n}\n\nexport default Play\n"],"sourceRoot":""}