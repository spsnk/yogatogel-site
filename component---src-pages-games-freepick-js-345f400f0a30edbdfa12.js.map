{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Table.js","webpack:///./node_modules/react-bootstrap/esm/ButtonToolbar.js","webpack:///./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack:///./src/components/games/freepick.js","webpack:///./src/pages/games/freepick.js"],"names":["Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","createElement","responsiveClass","ButtonToolbar","prefix","displayName","defaultProps","role","ButtonGroup","toggle","vertical","_ref$as","as","Component","rest","baseClass","Game","markets","default_game_bet","number","amount","useState","game_bets","setGameBets","bets","setBets","auto","setAuto","manageAuto","value","target","market","setMarket","theTotal","setTheTotal","addBet","bet","isNaN","parseInt","delBet","index","items","Array","from","length","splice","getBets","resetBets","updateBet","data","dataset","type","checked","id","field","item","slice","calculateTotal","console","log","actual_bets","the_market","undefined","tickets","game","games","free","the_actual_total","forEach","b","ticket","total","totalBets","pretotal","discount","Math","round","fee","game_id","push","discount_percent","fee_percent","table_info","Form","Text","Control","placeholder","onChange","Button","style","width","title","onClick","icon","faPlus","Row","Col","inline","colSpan","Group","Label","fontSize","margin","padding","e","market_id","plaintext","fontWeight","disabled","Object","keys","map","k","key","name","faTrashAlt","readOnly","tb","tbi","n","data-field","data-bet","min","toString","replace","filter","t","idx","Fragment","bb","Play","0","1","2","3"],"mappings":"4FAAA,kFAKIA,EAAQ,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIY,EAAoB,YAAmBV,EAAU,SACjDW,EAAU,IAAWV,EAAWS,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SE,EAAqB,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CACxER,UAAWU,EACXZ,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIM,EAAkBJ,EAAoB,cAM1C,MAJ0B,iBAAfF,IACTM,EAAkBA,EAAkB,IAAMN,GAGxB,IAAMK,cAAc,MAAO,CAC7CZ,UAAWa,GACVF,GAGL,OAAOA,KAEM,O,2NC9BXG,EAAgB,IAAMlB,YAAW,SAAUC,EAAMC,GACnD,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBQ,EAAQ,YAA8BX,EAAM,CAAC,WAAY,cAEzDkB,EAAS,YAAmBhB,EAAU,eAC1C,OAAoB,IAAMa,cAAc,MAAO,YAAS,GAAIJ,EAAO,CACjEV,IAAKA,EACLE,UAAW,IAAWA,EAAWe,SAGrCD,EAAcE,YAAc,gBAC5BF,EAAcG,aAfK,CACjBC,KAAM,WAeO,QCXXC,EAAc,IAAMvB,YAAW,SAAUC,EAAMC,GACjD,IAAIC,EAAWF,EAAKE,SAChBM,EAAOR,EAAKQ,KACZe,EAASvB,EAAKuB,OACdC,EAAWxB,EAAKwB,SAChBrB,EAAYH,EAAKG,UACjBsB,EAAUzB,EAAK0B,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAO,YAA8B5B,EAAM,CAAC,WAAY,OAAQ,SAAU,WAAY,YAAa,OAEnGkB,EAAS,YAAmBhB,EAAU,aACtC2B,EAAYX,EAEhB,OADIM,IAAUK,EAAYX,EAAS,aACf,IAAMH,cAAcY,EAAW,YAAS,GAAIC,EAAM,CACpE3B,IAAKA,EACLE,UAAW,IAAWA,EAAW0B,EAAWrB,GAAQU,EAAS,IAAMV,EAAMe,GAAUL,EAAS,iBAGhGI,EAAYH,YAAc,cAC1BG,EAAYF,aAxBO,CACjBI,UAAU,EACVD,QAAQ,EACRF,KAAM,SAsBO,QCsbAS,EAvcF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRC,EAAmB,CACvBC,OAAQ,GACRC,OAAQ,IAHkB,EAMKC,mBAAS,CAAC,OAAD,UAAMH,KAAzCI,EANqB,KAMVC,EANU,OAOJF,mBAAS,IAA1BG,EAPqB,KAOfC,EAPe,OASJJ,mBAAS,IAA1BK,EATqB,KASfC,EATe,KAUtBC,EAAa,SAAC,GAAgB,IAC9BC,EAD6B,EAAbC,OACDD,MACnBF,EAAQE,IAZkB,EAcAR,oBAAU,GAA/BU,EAdqB,KAcbC,EAda,OAgBIX,mBAAS,GAAlCY,EAhBqB,KAgBXC,EAhBW,KAkBtBC,EAAS,WACb,IAAIC,EAAG,iBAAQlB,GACfkB,EAAIhB,OAASiB,MAAMC,SAASZ,IAAS,GAAKA,EAC1CH,EAAY,GAAD,mBAAKD,GAAL,CAAgBc,MAEvBG,EAAS,SAAAC,GACb,IAAIC,EAAQC,MAAMC,KAAKrB,GACnBmB,EAAMG,OAAS,EACbJ,GAAS,GACXC,EAAMI,OAAOL,EAAO,GAGtBC,EAAQ,CAAC,OAAD,UAAMvB,IAEhBK,EAAYkB,GACZK,EAAQL,IAGJM,EAAY,WAChB,IAAIN,EAAQ,CAAC,OAAD,UAAMvB,IAClBK,EAAYkB,GACZK,EAAQL,IAGJO,EAAY,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACbmB,EAAOnB,EAAOoB,QAChBrB,EAAwB,aAAhBC,EAAOqB,KAAsBrB,EAAOsB,QAAUtB,EAAOD,MAC3DwB,EAAKJ,EAAKb,IACVkB,EAAQL,EAAKK,MACbb,EAAQC,MAAMC,KAAKrB,GACnBiC,EAAOd,EAAMY,GACL,WAAVC,GAAsBzB,EAAMe,OAAS,IACvCf,EAAQA,EAAM2B,MAAM,EAAG,IAEzBD,EAAKD,GAASzB,EAETQ,MAAMC,SAASZ,MAClB6B,EAAKnC,OAASM,GAGhBe,EAAMY,GAAMI,EAAeF,GAE3BG,QAAQC,IAAIlB,GACZK,EAAQL,GACRlB,EAAYkB,IAGRK,EAAU,SAACc,EAAaC,GAC5B,IAAgB,IAAZ9B,QAAgC+B,IAAfD,EAA0B,CAC7C,IAAIE,EAAU,GAGVC,EAFc/C,OAAuB6C,IAAfD,EAA2BA,EAAa9B,GACrCkC,MACPC,KAClBC,EAAmB,EACvBP,EAAYQ,SAAQ,SAAAC,GAClB,IAAIC,EAAS,CACXnD,OAAQkD,EAAElD,OACVK,KAAM,GACN+C,MAAO,EACPC,UAAW,GAEb,QACeV,IAAbO,EAAEjD,QACkB,IAApBiD,EAAElD,OAAOyB,SACRP,MAAMC,SAAS+B,EAAEjD,UAClBiD,EAAEjD,OAAS,EACX,CACA,IAAID,EAASkD,EAAElD,OACXC,EAASkB,SAAS+B,EAAEjD,QACpBqD,EAAoB,IAATrD,EACXsD,EAAWC,KAAKC,MAAMH,GAAYT,EAAKU,SAAW,MAClDG,EAAMF,KAAKC,MAAMH,GAAYT,EAAKa,IAAM,MACxCN,EAAQE,EAAWC,EAAWG,EAC9BzC,EAAM,CACR0C,QAASd,EAAKc,QACdd,KAAM,OACN7C,OAAQA,EACRC,OAAQA,EACRqD,SAAUA,EACVC,SAAUA,EACVG,IAAKA,EACLN,MAAOA,GAETD,EAAO9C,KAAKuD,KAAK3C,GACjBkC,EAAOC,OAASA,EAElBR,EAAQgB,KAAKT,GACbH,GAAoBG,EAAOC,SAG7B9C,EAAQsC,GACR7B,EAAYiC,KAIVV,EAAiB,SAAAF,GACrB,IAAInC,EACFiB,MAAMC,SAASiB,EAAKnC,WAAamC,EAAKpC,QAAUoC,EAAKpC,OAAOyB,OAAS,EACjE,EACAN,SAASiB,EAAKnC,QAEhB4D,EAAmB,EACnBC,EAAc,GACF,IAAZlD,IACFiD,EAAmB/D,EAAQc,GAAQ2C,SACnCO,EAAchE,EAAQc,GAAQ8C,KAGhC,IAAIJ,EAAoB,IAATrD,EAEXsD,EAAWC,KAAKC,MAAMH,GAAYO,EAAmB,MACrDH,EAAMF,KAAKC,MAAMH,GAAYQ,EAAc,MAC3CV,EAAQE,EAAWC,EAAWG,EAKlC,OAHAtB,EAAKmB,SAAWA,EAChBnB,EAAKsB,IAAMA,EACXtB,EAAKgB,MAAQA,EACNhB,GASH2B,EAAa,kBACjB,4BACE,iCACA,qCACA,4BACE,kBAACC,EAAA,EAAKC,KAAN,gBACA,kBAACD,EAAA,EAAKE,QAAN,CACEC,YAAY,OACZnC,KAAK,SACLtB,MAAOH,EACP6D,SAAU3D,KAGd,4BACE,kBAAC4D,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBC,MAAM,UACNC,QAASzD,EACT9C,UAAU,qBAEV,kBAAC,IAAD,CAAiBwG,KAAMC,IAAQpG,KAAK,WAM5C,OACE,oCACE,kBAACqG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2CACA,+CAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAMc,QAAM,GACV,kBAACjH,EAAA,EAAD,CACEM,SAAO,EACPG,OAAK,EACLG,YAAU,EACVP,UAAU,oBACVK,KAAK,MAEL,2BAAOL,UAAU,cACf,4BACE,wBAAI6G,QAAS,GACX,kBAACf,EAAA,EAAKgB,MAAN,KACE,kBAAChB,EAAA,EAAKiB,MAAN,CACEX,MAAO,CACLY,SAAU,QACVC,OAAQ,eACRC,QAAS,iBAJb,aASA,kBAACpB,EAAA,EAAKE,QAAN,CACEzE,GAAG,SACHvB,UAAU,gCACVwC,MAAOE,EACPwD,SAnED,SAAAiB,GACnB,IAAIC,EAAYD,EAAE1E,OAAOD,MACzBG,EAAUyE,GACV1D,KAiEoB2D,WAAS,EACTjB,MAAO,CACLkB,WAAY,SACZN,SAAU,QAGZ,4BAAQO,UAAQ,EAAC/E,OAAQ,GAAzB,iBAGCgF,OAAOC,KAAK7F,GAAS8F,KAAI,SAAAC,GAAC,OACzB,4BAAQC,IAAKD,EAAGnF,MAAOmF,GACpB/F,EAAQ+F,GAAGE,WAKpB,yBAAK7H,UAAU,wBACb,kBAACmG,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBC,MAAM,UACNC,QAASzD,GAHX,gBAKe,kBAAC,IAAD,CAAiB0D,KAAMC,IAAQpG,KAAK,QAEnD,kBAAC8F,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChB/F,QAAQ,SACRiG,QAAS,kBAAMrD,EAAOjB,EAAUsB,OAAS,KAH3C,iBAKiB,IACf,kBAAC,IAAD,CAAiBiD,KAAMsB,IAAYzH,KAAK,WAK/CwF,KAEH,+BACG5D,EAAUyF,KAAI,SAAC3E,EAAKI,GAAN,OACb,wBAAIyE,IAAG,OAASzE,GACd,4BACE,kBAAC2C,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAUW,EAAQ,EAAb,IACLiD,MAAO,CAAEC,MAAO,WAGpB,4BACG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IACbqB,KAAI,SAACM,EAAIC,GAAL,OACJ,kBAAC,EAAD,CAAeL,IAAG,MAAQK,GACxB,kBAAC,EAAD,KACGD,EAAGN,KAAI,SAAAQ,GAAC,OACP,kBAAC/B,EAAA,EAAD,CACEyB,IAAG,QAAUM,EACbC,aAAW,SACXC,WAAUjF,EACVX,MAAO0F,EACP3B,QAAS5C,EACT3D,eACiByE,IAAf1B,EAAIjB,QACJmB,SAASF,EAAIjB,UAAYoG,EACrB,wCACA,IAGLA,YAOb,4BACE,kBAACpC,EAAA,EAAKE,QAAN,CACEC,YAAY,cACZoC,IAAK,EACLvE,KAAK,SACLyD,UAAWxE,EAAIjB,QAAUiB,EAAIjB,OAAOyB,OAAS,EAC7Cf,MAAOO,EAAIhB,OACXoG,aAAW,SACXC,WAAUjF,EACV+C,SAAUvC,KAGd,4BACE,kBAACwC,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChB+B,WAAUjF,EACV7C,QAAQ,SACRiG,QAAS,kBAAMrD,EAAOC,IACtBnD,UAAU,qBAEV,kBAAC,IAAD,CAAiBwG,KAAMsB,IAAYzH,KAAK,cAMlD,2BAAOL,UAAU,cAAc6F,QAKrC,kBAACc,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAMc,QAAM,GACV,kBAACjH,EAAA,EAAD,CACEM,SAAO,EACPM,YAAU,EACVH,OAAK,EACLC,KAAK,KACLL,UAAU,iCAEV,2BAAOA,UAAU,cACf,4BACE,wBAAI6G,QAAS,GACX,kBAACf,EAAA,EAAKiB,MAAN,CACEX,MAAO,CACLY,SAAU,QACVC,OAAQ,eACRC,QAAS,iBAJb,gBAUF,wBAAIL,QAAS,GACX,kBAACf,EAAA,EAAKC,KAAN,KACE,qCACS,IACP,gCACGnD,EACE0F,WACAC,QAAQ,wBAAyB,MAC5B,IANZ,WAaPpG,EACEqG,QAAO,SAAAC,GAAC,OAAIA,EAAEtG,KAAKoB,OAAS,KAC5BmE,KAAI,SAACzC,EAAQyD,GAAT,OACH,kBAAC,IAAMC,SAAP,CAAgBf,IAAG,UAAYc,GAC7B,2BAAO1I,UAAU,cACf,4BACE,wBAAI6G,QAAS,GACX,kBAACf,EAAA,EAAKC,KAAN,gBAAoB2C,EAAM,GAC1B,kBAAC5C,EAAA,EAAKiB,MAAN,KACE,wBAAI/G,UAAU,QAAd,SACSiF,EAAOnD,OADhB,IACyBmD,EAAO2D,GAAK,OAAS,MAIlD,wBAAI/B,QAAS,EAAG7G,UAAU,wBACxB,kBAAC8F,EAAA,EAAKC,KAAN,KACE,4CACgB,IACd,gCACGd,EAAOC,MACLoD,WACAC,QAAQ,wBAAyB,MAC5B,IANZ,QAUF,kBAACzC,EAAA,EAAKC,KAAN,KACE,4BACE,gCAASd,EAAO9C,KAAKoB,QADvB,eAMN,4BACE,iCACA,qCACA,mCACA,sCACA,wCAGJ,+BACG0B,EAAO9C,KAAKuF,KAAI,SAAC3E,EAAKI,GAAN,OACf,wBAAIyE,IAAG,OAASzE,GACd,4BACE,kBAAC2C,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAUW,EAAQ,EAAb,IACLiD,MAAO,CAAEC,MAAO,WAGpB,4BACE,kBAACP,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAOO,EAAIjB,UAGf,4BACE,kBAACgE,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAOO,EAAIqC,SACRkD,WACAC,QAAQ,wBAAyB,QAGxC,4BACE,kBAACzC,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAOO,EAAIsC,SACRiD,WACAC,QAAQ,wBAAyB,QAGxC,4BACE,kBAACzC,EAAA,EAAKE,QAAN,CACEqB,WAAW,EACXU,UAAU,EACVvF,MAAOO,EAAImC,MACRoD,WACAC,QAAQ,wBAAyB,kBAStD,kBAACpC,EAAA,EAAD,CAAQ7F,QAAQ,UAAUN,UAAU,WAApC,UAGA,kBAACmG,EAAA,EAAD,CAAQ7F,QAAQ,SAASN,UAAU,UAAUuG,QAAS7C,GAAtD,cCrZGmF,UAlDF,WA2CX,OACE,oCACE,kBAAC,EAAD,CAAMjH,QA5CM,CACdkH,EAAG,CACDjB,KAAM,YACNjD,MAAO,CACLC,KAAM,CACJY,QAAS,IACTJ,SAAU,GACVG,IAAK,KAIXuD,EAAG,CACDlB,KAAM,QACNjD,MAAO,CACLC,KAAM,CACJY,QAAS,IACTJ,SAAU,GACVG,IAAK,KAIXwD,EAAG,CACDnB,KAAM,QACNjD,MAAO,CACLC,KAAM,CACJY,QAAS,IACTJ,SAAU,GACVG,IAAK,KAIXyD,EAAG,CACDpB,KAAM,cACNjD,MAAO,CACLC,KAAM,CACJY,QAAS,IACTJ,SAAU,EACVG,IAAK","file":"component---src-pages-games-freepick-js-345f400f0a30edbdfa12.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import { faPlus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Col,\n  Form,\n  Row,\n  Table,\n} from \"react-bootstrap\"\n\nconst Game = ({ markets }) => {\n  const default_game_bet = {\n    number: \"\",\n    amount: \"\",\n  }\n\n  const [game_bets, setGameBets] = useState([{ ...default_game_bet }])\n  const [bets, setBets] = useState([])\n\n  const [auto, setAuto] = useState(\"\")\n  const manageAuto = ({ target }) => {\n    let value = target.value\n    setAuto(value)\n  }\n  const [market, setMarket] = useState(-1)\n\n  const [theTotal, setTheTotal] = useState(0)\n\n  const addBet = () => {\n    let bet = { ...default_game_bet }\n    bet.amount = isNaN(parseInt(auto)) ? \"\" : auto\n    setGameBets([...game_bets, bet])\n  }\n  const delBet = index => {\n    let items = Array.from(game_bets)\n    if (items.length > 1) {\n      if (index > -1) {\n        items.splice(index, 1)\n      }\n    } else {\n      items = [{ ...default_game_bet }]\n    }\n    setGameBets(items)\n    getBets(items)\n  }\n\n  const resetBets = () => {\n    let items = [{ ...default_game_bet }]\n    setGameBets(items)\n    getBets(items)\n  }\n\n  const updateBet = ({ target }) => {\n    const data = target.dataset\n    let value = target.type === \"checkbox\" ? target.checked : target.value\n    const id = data.bet\n    const field = data.field\n    const items = Array.from(game_bets)\n    const item = items[id]\n    if (field === \"number\" && value.length > 2) {\n      value = value.slice(0, 2)\n    }\n    item[field] = value\n\n    if (!isNaN(parseInt(auto))) {\n      item.amount = auto\n    }\n\n    items[id] = calculateTotal(item)\n\n    console.log(items)\n    getBets(items)\n    setGameBets(items)\n  }\n\n  const getBets = (actual_bets, the_market) => {\n    if (market !== -1 || the_market !== undefined) {\n      let tickets = []\n      let this_market = markets[the_market !== undefined ? the_market : market]\n      let this_games = this_market.games\n      let game = this_games.free\n      let the_actual_total = 0\n      actual_bets.forEach(b => {\n        let ticket = {\n          number: b.number,\n          bets: [],\n          total: 0,\n          totalBets: 0,\n        }\n        if (\n          b.amount !== undefined &&\n          b.number.length === 1 &&\n          !isNaN(parseInt(b.amount)) &&\n          b.amount > 0\n        ) {\n          let number = b.number\n          let amount = parseInt(b.amount)\n          let pretotal = amount * 1000\n          let discount = Math.round(pretotal * (game.discount / 100))\n          let fee = Math.round(pretotal * (game.fee / 100))\n          let total = pretotal - discount + fee\n          let bet = {\n            game_id: game.game_id,\n            game: \"free\",\n            number: number,\n            amount: amount,\n            pretotal: pretotal,\n            discount: discount,\n            fee: fee,\n            total: total,\n          }\n          ticket.bets.push(bet)\n          ticket.total += total\n        }\n        tickets.push(ticket)\n        the_actual_total += ticket.total\n      })\n      // console.log(tickets)\n      setBets(tickets)\n      setTheTotal(the_actual_total)\n    }\n  }\n\n  const calculateTotal = item => {\n    let amount =\n      isNaN(parseInt(item.amount)) || !item.number || item.number.length < 2\n        ? 0\n        : parseInt(item.amount)\n\n    let discount_percent = 0\n    let fee_percent = 0\n    if (market !== -1) {\n      discount_percent = markets[market].discount\n      fee_percent = markets[market].fee\n    }\n\n    let pretotal = amount * 1000\n\n    let discount = Math.round(pretotal * (discount_percent / 100))\n    let fee = Math.round(pretotal * (fee_percent / 100))\n    let total = pretotal - discount + fee\n\n    item.discount = discount\n    item.fee = fee\n    item.total = total\n    return item\n  }\n\n  const updateMarket = e => {\n    let market_id = e.target.value\n    setMarket(market_id)\n    resetBets()\n  }\n\n  const table_info = () => (\n    <tr>\n      <th>#</th>\n      <th>Nomor</th>\n      <th>\n        <Form.Text>Taruhan</Form.Text>\n        <Form.Control\n          placeholder=\"auto\"\n          type=\"number\"\n          value={auto}\n          onChange={manageAuto}\n        />\n      </th>\n      <th>\n        <Button\n          style={{ width: \"auto\" }}\n          title=\"Add Bet\"\n          onClick={addBet}\n          className=\"d-md-block d-none\"\n        >\n          <FontAwesomeIcon icon={faPlus} size=\"sm\" />\n        </Button>\n      </th>\n    </tr>\n  )\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h2>Colok Bebas</h2>\n          <h5>IDR 1,000 = 1</h5>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Form inline>\n            <Table\n              striped\n              hover\n              responsive\n              className=\"betTable betPanel\"\n              size=\"sm\"\n            >\n              <thead className=\"table-dark\">\n                <tr>\n                  <td colSpan={4}>\n                    <Form.Group>\n                      <Form.Label\n                        style={{\n                          fontSize: \"1.8em\",\n                          margin: \"2px 2rem 0 0\",\n                          padding: \"0.375rem 2px\",\n                        }}\n                      >\n                        Bet Panel\n                      </Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        className=\"form-control betTable inherit\"\n                        value={market}\n                        onChange={updateMarket}\n                        plaintext\n                        style={{\n                          fontWeight: \"bolder\",\n                          fontSize: \"2em\",\n                        }}\n                      >\n                        <option disabled value={-1}>\n                          Select Market\n                        </option>\n                        {Object.keys(markets).map(k => (\n                          <option key={k} value={k}>\n                            {markets[k].name}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Form.Group>\n                    <div className=\"d-md-none d-sm-block\">\n                      <Button\n                        style={{ width: \"auto\" }}\n                        title=\"Add Bet\"\n                        onClick={addBet}\n                      >\n                        Tambah Baris <FontAwesomeIcon icon={faPlus} size=\"sm\" />\n                      </Button>\n                      <Button\n                        style={{ width: \"auto\" }}\n                        variant=\"danger\"\n                        onClick={() => delBet(game_bets.length - 1)}\n                      >\n                        Hapus Terakhir{\" \"}\n                        <FontAwesomeIcon icon={faTrashAlt} size=\"sm\" />\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n                {table_info()}\n              </thead>\n              <tbody>\n                {game_bets.map((bet, index) => (\n                  <tr key={`bet-${index}`}>\n                    <td>\n                      <Form.Control\n                        plaintext={true}\n                        readOnly={true}\n                        value={`${index + 1}.`}\n                        style={{ width: \"1rem\" }}\n                      />\n                    </td>\n                    <td>\n                      {[\n                        [0, 1, 2, 3, 4],\n                        [5, 6, 7, 8, 9],\n                      ].map((tb, tbi) => (\n                        <ButtonToolbar key={`tb-${tbi}`}>\n                          <ButtonGroup>\n                            {tb.map(n => (\n                              <Button\n                                key={`bbtn-${n}`}\n                                data-field=\"number\"\n                                data-bet={index}\n                                value={n}\n                                onClick={updateBet}\n                                className={\n                                  bet.number !== undefined &&\n                                  parseInt(bet.number) === n\n                                    ? \"bg-warning text-dark font-weight-bold\"\n                                    : \"\"\n                                }\n                              >\n                                {n}\n                              </Button>\n                            ))}\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      ))}\n                    </td>\n                    <td>\n                      <Form.Control\n                        placeholder=\"Colok Bebas\"\n                        min={0}\n                        type=\"number\"\n                        disabled={!bet.number || bet.number.length < 1}\n                        value={bet.amount}\n                        data-field=\"amount\"\n                        data-bet={index}\n                        onChange={updateBet}\n                      />\n                    </td>\n                    <td>\n                      <Button\n                        style={{ width: \"auto\" }}\n                        data-bet={index}\n                        variant=\"danger\"\n                        onClick={() => delBet(index)}\n                        className=\"d-md-block d-none\"\n                      >\n                        <FontAwesomeIcon icon={faTrashAlt} size=\"sm\" />\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot className=\"table-dark\">{table_info()}</tfoot>\n            </Table>\n          </Form>\n        </Col>\n\n        <Col>\n          <Form inline>\n            <Table\n              striped\n              responsive\n              hover\n              size=\"sm\"\n              className=\"betTable mt-3 mt-sm-3 mt-md-0\"\n            >\n              <thead className=\"table-dark\">\n                <tr>\n                  <th colSpan={3}>\n                    <Form.Label\n                      style={{\n                        fontSize: \"1.8em\",\n                        margin: \"2px 2rem 0 0\",\n                        padding: \"0.375rem 2px\",\n                      }}\n                    >\n                      Hasil Total\n                    </Form.Label>\n                  </th>\n                  <th colSpan={3}>\n                    <Form.Text>\n                      <h6>\n                        Total:{\" \"}\n                        <strong>\n                          {theTotal\n                            .toString()\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                        </strong>{\" \"}\n                        IDR\n                      </h6>\n                    </Form.Text>\n                  </th>\n                </tr>\n              </thead>\n              {bets\n                .filter(t => t.bets.length > 0)\n                .map((ticket, idx) => (\n                  <React.Fragment key={`ticket-${idx}`}>\n                    <thead className=\"table-dark\">\n                      <tr>\n                        <th colSpan={3}>\n                          <Form.Text>Ticket #{idx + 1}</Form.Text>\n                          <Form.Label>\n                            <h5 className=\"my-1\">\n                              Nomor {ticket.number} {ticket.bb ? \"+ BB\" : \"\"}\n                            </h5>\n                          </Form.Label>\n                        </th>\n                        <th colSpan={3} className=\"bg-warning text-dark\">\n                          <Form.Text>\n                            <h6>\n                              Ticket Bayar:{\" \"}\n                              <strong>\n                                {ticket.total\n                                  .toString()\n                                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                              </strong>{\" \"}\n                              IDR\n                            </h6>\n                          </Form.Text>\n                          <Form.Text>\n                            <h6>\n                              <strong>{ticket.bets.length}</strong> Taruhan\n                            </h6>\n                          </Form.Text>\n                        </th>\n                      </tr>\n                      <tr>\n                        <th>#</th>\n                        <th>Nomor</th>\n                        <th>Bet</th>\n                        <th>Diskon</th>\n                        <th>Bayar:</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ticket.bets.map((bet, index) => (\n                        <tr key={`res-${index}`}>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={`${index + 1}.`}\n                              style={{ width: \"1rem\" }}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.number}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.pretotal\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.discount\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                          <td>\n                            <Form.Control\n                              plaintext={true}\n                              readOnly={true}\n                              value={bet.total\n                                .toString()\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </React.Fragment>\n                ))}\n            </Table>\n            <Button variant=\"warning\" className=\"mx-auto\">\n              Submit\n            </Button>\n            <Button variant=\"danger\" className=\"mx-auto\" onClick={resetBets}>\n              Clear\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Game\n","import React from \"react\"\nimport Game from \"src/components/games/freepick\"\n\nconst Play = () => {\n  const markets = {\n    0: {\n      name: \"Indonesia\",\n      games: {\n        free: {\n          game_id: 234,\n          discount: 10,\n          fee: 0,\n        },\n      },\n    },\n    1: {\n      name: \"China\",\n      games: {\n        free: {\n          game_id: 234,\n          discount: 10,\n          fee: 0,\n        },\n      },\n    },\n    2: {\n      name: \"Texas\",\n      games: {\n        free: {\n          game_id: 234,\n          discount: 10,\n          fee: 0,\n        },\n      },\n    },\n    3: {\n      name: \"Mexico Mega\",\n      games: {\n        free: {\n          game_id: 234,\n          discount: 5,\n          fee: 0,\n        },\n      },\n    },\n  }\n  return (\n    <>\n      <Game markets={markets} />\n    </>\n  )\n}\n\nexport default Play\n"],"sourceRoot":""}